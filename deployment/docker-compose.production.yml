services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: gilbert_db
      POSTGRES_USER: gilbert_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gilbert_user -d gilbert_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - ENVIRONMENT=production
      - JWT_SECRET=${JWT_SECRET}
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - DATABASE_URL=postgresql://gilbert_user:${POSTGRES_PASSWORD}@postgres:5432/gilbert_db
      - REDIS_URL=redis://redis:6379/0



      - DB_POOL_SIZE=10
      - DB_POOL_TIMEOUT=30
      - HTTP_TIMEOUT=60
      - ENABLE_CACHE=true
      - CACHE_TTL=600
      - LOG_LEVEL=INFO
      - MAX_UPLOAD_SIZE=100000000
      - DEFAULT_LANGUAGE=fr
      - SPEAKER_LABELS=true
    volumes:
      - ../backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: "https://gilbert-assistant.ovh/api"
        VITE_APP_NAME: Gilbert
    restart: always
    environment:
      - VITE_API_URL=${API_URL}
      - VITE_APP_NAME=Gilbert
    volumes:
      - frontend:/usr/share/nginx/html
    depends_on:
      - api

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ../backend/uploads:/var/www/uploads
      - frontend:/usr/share/nginx/html
    depends_on:
      - api
      - frontend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME} --force-renewal
    depends_on:
      - nginx

volumes:
  postgres_data:
  redis_data:
  frontend: